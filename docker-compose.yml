version: '3'

services:
    db:
      build:
        context: ./mariadb
      volumes:
          - "./.data/db:/var/lib/mysql"
          - "./logs/mariadb:/var/log/mysql"
      environment:
        - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
        - MYSQL_DATABASE=${MYSQL_DATABASE}
        - MYSQL_USER=${MYSQL_USER}
        - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      networks:
        - default
    api:
      build:
        context: ./api
      depends_on:
        - db
      environment:
        - PORT=3000
        - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
        - MYSQL_DATABASE=${MYSQL_DATABASE}
        - MYSQL_USER=${MYSQL_USER}
        - MYSQL_PASSWORD=${MYSQL_PASSWORD}
        - MYSQL_HOST=${MYSQL_HOST}
        - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
        - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
        - API_URL=${API_URL}
        - AWS_SQS_URL=${AWS_SQS_URL}
        - MAX_PLACES=${MAX_PLACES}
      ports:
        - 3000:3000
      command: npm start
      networks:
        - default
    frontend:
      build:
        context: ./frontend
      depends_on:
        - api
      environment:
        - PORT=8080
        - HOST=localhost
      command: npm run dev
      networks:
        - default
    browser:
      build:
        context: ./browser
        args:
          - SERVERLESS_VERSION=1.32.0
      environment:
        - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
        - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
        - GRECAPTCHA_SITE_KEY=${GRECAPTCHA_SITE_KEY}
        - ANTICAPTCHA_KEY=${ANTICAPTCHA_KEY}
        - RUCAPTCHA_KEY=${RUCAPTCHA_KEY}
        - AWS_SQS_ARN=${AWS_SQS_ARN}
        - AWS_LAMBDA_MEMORY=${AWS_LAMBDA_MEMORY}
        - AWS_LAMBDA_TIMEOUT=${AWS_LAMBDA_TIMEOUT}
        - SLS_DEBUG=*
      networks:
        - default
networks:
  default:
    driver: bridge